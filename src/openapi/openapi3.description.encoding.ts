import { DiffTemplateParamsCalculator, DynamicParams } from '../types'
import {
  DIFF_ACTION_TO_ACTION_MAP,
  DIFF_ACTION_TO_PREPOSITION_MAP,
  GREP_TEMPLATE_PARAM_ENCODING_NAME,
  GREP_TEMPLATE_PARAM_HEADER_NAME,
  GREP_TEMPLATE_PARAM_MEDIA_TYPE,
  GREP_TEMPLATE_PARAM_RESPONSE_NAME
} from '../core'
import { checkPrimitiveType, resolveAllDeclarationPath } from '../utils'
import {
  grepValue,
  matchPaths,
  MatchResult,
  OPEN_API_HTTP_METHODS,
  OPEN_API_PROPERTY_COMPONENTS,
  OPEN_API_PROPERTY_CONTENT,
  OPEN_API_PROPERTY_ENCODING,
  OPEN_API_PROPERTY_HEADERS,
  OPEN_API_PROPERTY_PATHS,
  OPEN_API_PROPERTY_REQUEST_BODIES,
  OPEN_API_PROPERTY_REQUEST_BODY,
  OPEN_API_PROPERTY_RESPONSES,
  PREDICATE_ANY_VALUE,
  PREDICATE_UNCLOSED_END,
} from '@netcracker/qubership-apihub-api-unifier'
import { calculateChangedProperty, calculateRequestPlace, calculateResponsePlace } from './openapi3.description'

export const encodingParamsCalculator: DiffTemplateParamsCalculator = (diff, _) => {
  const result = {
    action: DIFF_ACTION_TO_ACTION_MAP[diff.action],
    preposition: DIFF_ACTION_TO_PREPOSITION_MAP[diff.action]
  }

  const declarationPaths = resolveAllDeclarationPath(diff)

  let matchResult = matchPaths(declarationPaths, PREDICATES_PATHS_FOR_CHANGED_ENCODING_IN_REQUEST)
  if (matchResult) {
    const place = calculateRequestPlace(matchResult)
    const encodingName = checkPrimitiveType(matchResult.grepValues[GREP_TEMPLATE_PARAM_ENCODING_NAME])
    return {
      ...result,
      encodingName,
      place
    }
  }

  matchResult = matchPaths(declarationPaths, PREDICATES_PATHS_FOR_CHANGED_ENCODING_IN_RESPONSE)
  if (matchResult) {
    const place = calculateResponsePlace(matchResult)
    const encodingName = checkPrimitiveType(matchResult.grepValues[GREP_TEMPLATE_PARAM_ENCODING_NAME])
    return {
      ...result,
      encodingName,
      place
    }
  }

  matchResult = matchPaths(declarationPaths, PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_ENCODING_IN_REQUEST)
  if (matchResult) {
    const encodingParams = calculateEncodingParamsInRequest(matchResult)
    return {
      ...result,
      ...encodingParams,
    }
  }

  matchResult = matchPaths(declarationPaths, PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_ENCODING_IN_RESPONSE)
  if (matchResult) {
    const encodingParams = calculateEncodingParamsInResponse(matchResult)
    return {
      ...result,
      ...encodingParams,
    }
  }

  return result
}

const calculateEncodingParamsInResponse = (matchResult: MatchResult): DynamicParams => {
  const place = calculateResponsePlace(matchResult)
  const encodingName = checkPrimitiveType(matchResult.grepValues[GREP_TEMPLATE_PARAM_ENCODING_NAME])
  const propertyName = calculateChangedProperty(matchResult, true)
  return { place, encodingName, propertyName }
}

const calculateEncodingParamsInRequest = (matchResult: MatchResult): DynamicParams => {
  const place = calculateRequestPlace(matchResult)
  const encodingName = checkPrimitiveType(matchResult.grepValues[GREP_TEMPLATE_PARAM_ENCODING_NAME])
  const propertyName = calculateChangedProperty(matchResult, true)
  return { place, encodingName, propertyName }
}

const PREDICATES_PATHS_FOR_CHANGED_ENCODING_IN_REQUEST = [
  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_REQUEST_BODIES, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_ENCODING, grepValue(GREP_TEMPLATE_PARAM_ENCODING_NAME)],
  ...OPEN_API_HTTP_METHODS.map(httpMethod => [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, httpMethod, OPEN_API_PROPERTY_REQUEST_BODY, OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_ENCODING, grepValue(GREP_TEMPLATE_PARAM_ENCODING_NAME)]),
]
const PREDICATES_PATHS_FOR_CHANGED_ENCODING_IN_RESPONSE = [
  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_RESPONSES, grepValue(GREP_TEMPLATE_PARAM_RESPONSE_NAME), OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_ENCODING, grepValue(GREP_TEMPLATE_PARAM_ENCODING_NAME)],
  ...OPEN_API_HTTP_METHODS.map(httpMethod => [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, httpMethod, OPEN_API_PROPERTY_RESPONSES, grepValue(GREP_TEMPLATE_PARAM_RESPONSE_NAME), OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_ENCODING, grepValue(GREP_TEMPLATE_PARAM_ENCODING_NAME)])
]
const PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_ENCODING_IN_REQUEST = [
  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_REQUEST_BODIES, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_ENCODING, grepValue(GREP_TEMPLATE_PARAM_ENCODING_NAME), PREDICATE_UNCLOSED_END],
  ...OPEN_API_HTTP_METHODS.map(httpMethod => [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, httpMethod, OPEN_API_PROPERTY_REQUEST_BODY, OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_ENCODING, grepValue(GREP_TEMPLATE_PARAM_ENCODING_NAME), PREDICATE_UNCLOSED_END]),
]
const PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_ENCODING_IN_RESPONSE = [
  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_RESPONSES, grepValue(GREP_TEMPLATE_PARAM_RESPONSE_NAME), OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_ENCODING, grepValue(GREP_TEMPLATE_PARAM_ENCODING_NAME), PREDICATE_UNCLOSED_END],
  ...OPEN_API_HTTP_METHODS.map(httpMethod => [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, httpMethod, OPEN_API_PROPERTY_RESPONSES, grepValue(GREP_TEMPLATE_PARAM_RESPONSE_NAME), OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_ENCODING, grepValue(GREP_TEMPLATE_PARAM_ENCODING_NAME), PREDICATE_UNCLOSED_END])
]
export const PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_ENCODING_IN_HEADER_IN_RESPONSE = [
  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_RESPONSES, grepValue(GREP_TEMPLATE_PARAM_RESPONSE_NAME), OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_ENCODING, grepValue(GREP_TEMPLATE_PARAM_ENCODING_NAME), OPEN_API_PROPERTY_HEADERS, grepValue(GREP_TEMPLATE_PARAM_HEADER_NAME), PREDICATE_UNCLOSED_END],
  ...OPEN_API_HTTP_METHODS.map(httpMethod => [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, httpMethod, OPEN_API_PROPERTY_RESPONSES, grepValue(GREP_TEMPLATE_PARAM_RESPONSE_NAME), OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_ENCODING, grepValue(GREP_TEMPLATE_PARAM_ENCODING_NAME), OPEN_API_PROPERTY_HEADERS, grepValue(GREP_TEMPLATE_PARAM_HEADER_NAME), PREDICATE_UNCLOSED_END])
]
export const PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_ENCODING_IN_HEADER_IN_REQUEST = [
  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_REQUEST_BODIES, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_ENCODING, grepValue(GREP_TEMPLATE_PARAM_ENCODING_NAME), OPEN_API_PROPERTY_HEADERS, grepValue(GREP_TEMPLATE_PARAM_HEADER_NAME), PREDICATE_UNCLOSED_END],
  ...OPEN_API_HTTP_METHODS.map(httpMethod => [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, httpMethod, OPEN_API_PROPERTY_REQUEST_BODY, OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_ENCODING, grepValue(GREP_TEMPLATE_PARAM_ENCODING_NAME), OPEN_API_PROPERTY_HEADERS, grepValue(GREP_TEMPLATE_PARAM_HEADER_NAME), PREDICATE_UNCLOSED_END]),
]
